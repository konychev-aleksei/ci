name: Frontend CI

on:
  push:
    branches-ignore:
      - main # исключаем main для light CI
  pull_request:
    branches:
      - "**"
  workflow_dispatch: # для ручного запуска Release

jobs:
  light-ci:
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Run ESLint on changed files
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | xargs npx eslint

      - name: Run Jest on changed files
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          CHANGED=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -E '\.(ts|tsx|js|jsx)$')
          if [ -n "$CHANGED" ]; then
            echo "Running Jest on related tests for changed source files:"
            echo "$CHANGED"
            npx jest --findRelatedTests $CHANGED --passWithNoTests
          else
            echo "No testable files changed."
          fi

  heavy-ci:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (all files)
        run: npx eslint .

      - name: Run Jest (all tests)
        run: npx jest --coverage

  release:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project (Vite + React)
        run: npm run build

      - name: Create release tag
        id: create_tag
        run: |
          TAG_NAME="release/$(date -u +'%Y%m%d%H%M%S')"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          name: Release ${{ steps.create_tag.outputs.tag_name }}
          body: "Автоматическая сборка"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload dist to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
